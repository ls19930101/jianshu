{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lishuang/Desktop/jianshu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getList),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(headerSaga);\n\nimport { put, takeEvery } from 'redux-saga/effects';\nimport { constants, actionCreators } from './index';\nimport axios from 'axios';\n\nfunction getList(action) {\n  var res, data, _action;\n\n  return _regeneratorRuntime.wrap(function getList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.get('api/headerList.json');\n\n        case 3:\n          res = _context.sent;\n          data = res.data;\n          _action = actionCreators.changeList(data.data);\n          _context.next = 8;\n          return put(_action);\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('网络异常，请重新获取');\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 10]]);\n}\n\nfunction headerSaga() {\n  return _regeneratorRuntime.wrap(function headerSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(constants.GET_LIST, getList);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nexport default headerSaga;","map":{"version":3,"sources":["/Users/lishuang/Desktop/jianshu/src/common/header/store/headerSaga.js"],"names":["getList","headerSaga","put","takeEvery","constants","actionCreators","axios","action","get","res","data","changeList","console","log","GET_LIST"],"mappings":";;;;yBAKUA,O;;;yBAWAC,U;;AAhBV,SAAUC,GAAV,EAAeC,SAAf,QAAgC,oBAAhC;AACA,SAAQC,SAAR,EAAkBC,cAAlB,QAAuC,SAAvC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAAUN,OAAV,CAAkBO,MAAlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEkB,iBAAMD,KAAK,CAACE,GAAN,CAAU,qBAAV,CAAN;;AAFlB;AAEaC,UAAAA,GAFb;AAGaC,UAAAA,IAHb,GAGkBD,GAAG,CAACC,IAHtB;AAIYH,UAAAA,OAJZ,GAImBF,cAAc,CAACM,UAAf,CAA0BD,IAAI,CAACA,IAA/B,CAJnB;AAAA;AAKQ,iBAAMR,GAAG,CAACK,OAAD,CAAT;;AALR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQK,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUZ,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAME,SAAS,CAACC,SAAS,CAACU,QAAX,EAAoBd,OAApB,CAAf;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,UAAf","sourcesContent":["import {  put, takeEvery } from 'redux-saga/effects';\nimport {constants,actionCreators} from './index';\n\nimport axios from 'axios';\n\nfunction* getList(action){\n    try{\n       const res= yield axios.get('api/headerList.json');\n       const data=res.data;\n      const action=actionCreators.changeList(data.data);\n        yield put(action);\n    }catch(e){\n        console.log('网络异常，请重新获取');\n    }\n}\n\nfunction* headerSaga(){\n    yield takeEvery(constants.GET_LIST,getList)\n}\n\n\nexport default headerSaga;"]},"metadata":{},"sourceType":"module"}